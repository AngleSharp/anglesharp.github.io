{"version":3,"sources":["tools/__generated__/blog-2015-08-27-anglesharp-v09-released.tsx"],"names":[],"mappings":";;;AAmCC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAlCD,IAAA,EAAA,EAAA,QAAA,UACA,EAAA,QAAA,+BAiCC,SAAA,EAAA,GAAA,GAAA,mBAAA,QAAA,OAAA,KAAA,IAAA,EAAA,IAAA,QAAA,EAAA,IAAA,QAAA,OAAA,EAAA,SAAA,GAAA,OAAA,EAAA,EAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,GAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,MAAA,CAAA,QAAA,GAAA,IAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,IAAA,IAAA,KAAA,EAAA,GAAA,YAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EA7BK,IAAM,GAAa,EAAc,EAAA,eAAA,QAC3B,EAAO,+GACP,EAAO,23BAIJ,QAAQ,sCAAqC,4tCAUhD,EAAO,CAAS,MAAA,2BAAkC,KAAA,sBAAmC,WAAA,eAAwB,OAAA,gBAAyB,OAAA,eAAyB,QAAA,SAG5J,EAAA,WACb,OAAA,EAAA,cAAC,EAAD,YAAY,KAER,EAAA,cAAC,EAAU,CAAC,KAAM,GAChB,EAAA,cAAC,EAAD,YAAY,CAAC,KAAM,GACjB,EAAA,cAAC,EAAD,SAAS,CAAC,QAAS,EAAM,KAAM,EAAM,UAAW,uBAKzD,QAAA,QAAA","file":"blog-2015-08-27-anglesharp-v09-released.6bf6810e.js","sourceRoot":"../../node_modules/piral-docs-tools/src","sourcesContent":["// {\"title\":\"AngleSharp v0.9 released\",\"date\":\"2015-08-27 14:05:00\",\"categories\":\"news release\",\"author\":\"Florian Rappl\",\"userId\":\"FlorianRappl\",\"section\":\"Posts\",\"link\":\"/blog/2015-08-27-anglesharp-v09-released\",\"source\":\"/home/runner/work/anglesharp.github.io/anglesharp.github.io/docs/blog/2015-08-27-anglesharp-v09-released.md\"}\nimport * as React from 'react';\nimport { ContentPage } from 'piral-docs-tools/components';\n\n      import { PageContent, Markdown, getPageLayout } from 'piral-docs-tools/components';\n\n      const PageLayout = getPageLayout(\"blog\");\n      const link = \"https://github.com/AngleSharp/anglesharp.github.io/tree/main/docs/blog/2015-08-27-anglesharp-v09-released.md\";\n      const html = `\n<p>Yesterday the latest version of Anglesharp has been released. This release marks the v0.9 milestone. Besides providing skeleton implementations for, e.g., the recent shadow DOM API draft, the <code>picture</code> element, etc., this version fixes some bugs that may appear in conjunction with using scripts.</p>\n<p>Scripts are one of the success stories for AngleSharp. They make this library so useful. Therefore the AngleSharp.Scripting project is moving forward as well. The <em>AngleSharp.Scripting.JavaScript</em> library was yesterday released in with version 0.3. Here we will now try to align with the versioning of AngleSharp.Core.</p>\n<p>AngleSharp.Core will definitely be split up. The library is already too huge and contains too many features to be considered lightweight. Let's have a look at the SLOC (taken two months ago) of the DOM part alone:</p>\n<p><img src=\"${require(\"../../../../../images/dist_dom.png\")}\" alt=\"AngleSharp Core DOM SLOC Distribution\"></p>\n<p>From this picture alone we can already estimate that splitting the library could be benificial. We have roughly 1/3 SLOC spent on general, HTML and CSS functionality. The splitting could therefore result in three or four parts:</p>\n<ul>\n<li><em>AngleSharp.Core.Common</em>, containing the basic infrastructure and definitions [no dependency]</li>\n<li><em>AngleSharp.Core.Html</em>, containing the HTML parser and DOM implementation [depending on Common]</li>\n<li><em>AngleSharp.Core.Css</em>, containing the CSS parser and CSSOM implementation [depending on Common]</li>\n<li><em>AngleSharp.Core.Complete</em>, aggregating the Core and providing further helpers [depending on the former three]</li>\n</ul>\n<p>Experiments with a proper dissection will begin soon. Also the renderer part will then be discussed. Plans have already been made and it seems likely that a renderer will be published within this year (experimental stage). Here a new project, AngleSharp.Renderer will be opened. The renderer itself will contain many libraries, specifically to make the renderer common infrastructure a PCL again with specific platform libraries that contain the actual drawing code.</p>\n`;\n      const meta = {\"title\":\"AngleSharp v0.9 released\",\"date\":\"2015-08-27 14:05:00\",\"categories\":\"news release\",\"author\":\"Florian Rappl\",\"userId\":\"FlorianRappl\",\"section\":\"Posts\"};\n    \n\nexport default () => (\n  <ContentPage>\n    \n      <PageLayout meta={meta}>\n        <PageContent meta={meta}>\n          <Markdown content={html} link={link} editLabel={\"Edit on GitHub\"} />\n        </PageContent>\n      </PageLayout>\n    \n  </ContentPage>\n);"]}