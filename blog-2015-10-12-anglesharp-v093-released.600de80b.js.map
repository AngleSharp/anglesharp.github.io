{"version":3,"sources":["tools/__generated__/blog-2015-10-12-anglesharp-v093-released.tsx"],"names":[],"mappings":";AAuBC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAtBD,IAAA,EAAA,EAAA,QAAA,UACA,EAAA,QAAA,4BAqBC,SAAA,EAAA,GAAA,GAAA,mBAAA,QAAA,OAAA,KAAA,IAAA,EAAA,IAAA,QAAA,EAAA,IAAA,QAAA,OAAA,EAAA,SAAA,GAAA,OAAA,EAAA,EAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,GAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,MAAA,CAAA,QAAA,GAAA,IAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,IAAA,IAAA,KAAA,EAAA,GAAA,YAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAjBK,IAAM,EAAO,gHACP,EAAO,++BAQJ,EAAA,WACb,OAAA,EAAA,cAAC,EAAD,YAAY,KAER,EAAA,cAAC,EAAD,YAAY,CAAC,KAAM,CAAS,MAAA,6BAAoC,KAAA,sBAAmC,WAAA,eAAwB,OAAA,kBACzH,EAAA,cAAC,EAAD,SAAS,CAAC,QAAS,EAAM,KAAM,EAAM,UAAW,sBAIvD,QAAA,QAAA","file":"blog-2015-10-12-anglesharp-v093-released.600de80b.js","sourceRoot":"..\\..\\node_modules\\piral-docs-tools\\src","sourcesContent":["// {\"title\":\"AngleSharp v0.9.3 released\",\"date\":\"2015-10-12 11:44:00\",\"categories\":\"news release\",\"author\":\"Florian Rappl\",\"link\":\"/blog/2015-10-12-anglesharp-v093-released\",\"source\":\"E:\\\\Code\\\\AngleSharp\\\\AngleSharp.Website\\\\docs\\\\blog\\\\2015-10-12-anglesharp-v093-released.md\"}\nimport * as React from 'react';\nimport { ContentPage } from '../../scripts/components';\n\n      import { PageContent, Markdown } from '../../scripts/components';\n\n      const link = \"https://github.com/AngleSharp/anglesharp.github.io/tree/main/docs/blog/2015-10-12-anglesharp-v093-released.md\";\n      const html = `\n<p>AngleSharp v0.9.3 is another round of minor updates. Besides a few bug fixes the <code>CompareDocumentPosition</code> method has been improved. It now passes all tests and works reliably.</p>\n<p>The most interesting new feature is the ability to define custom handling of entities. This can be done via the <code>IEntityService</code>. The <code>GetSymbol</code> is usually called with an entity like <code>gt</code> for XML or <code>gt;</code> for HTML. The difference between XML and HTML lies in the way that HTML handles entity errors. HTML has the possibility to use non-semicolon-terminated entities.</p>\n<p>The simplest way would be to use, e.g., <code>XmlEntityService.Resolver</code>, in a custom implementation. That way the common entities would be resolved by the already available service.</p>\n<p>The next release will most probably be a feature release again. Hopefully features such as the CSSOM improvements, factory extensions, or a virtual file system, will be integrated.</p>\n`;\n    \n\nexport default () => (\n  <ContentPage>\n    \n      <PageContent meta={{\"title\":\"AngleSharp v0.9.3 released\",\"date\":\"2015-10-12 11:44:00\",\"categories\":\"news release\",\"author\":\"Florian Rappl\"}}>\n        <Markdown content={html} link={link} editLabel={\"Edit on GitHub\"} />\n      </PageContent>\n    \n  </ContentPage>\n);"]}