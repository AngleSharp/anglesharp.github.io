(self.webpackChunk_pidoc_core=self.webpackChunk_pidoc_core||[]).push([[764],{3764:(e,n,t)=>{"use strict";t.r(n),t.d(n,{"default":()=>l});var r=t(7158),a=t(5292),i="\n<p>Yesterday the latest version of Anglesharp has been released. This release marks the v0.9 milestone. Besides providing skeleton implementations for, e.g., the recent shadow DOM API draft, the <code>picture</code> element, etc., this version fixes some bugs that may appear in conjunction with using scripts.</p>\n<p>Scripts are one of the success stories for AngleSharp. They make this library so useful. Therefore the AngleSharp.Scripting project is moving forward as well. The <em>AngleSharp.Scripting.JavaScript</em> library was yesterday released in with version 0.3. Here we will now try to align with the versioning of AngleSharp.Core.</p>\n<p>AngleSharp.Core will definitely be split up. The library is already too huge and contains too many features to be considered lightweight. Let's have a look at the SLOC (taken two months ago) of the DOM part alone:</p>\n<p><img src=\"".concat(t(3667),'" alt="AngleSharp Core DOM SLOC Distribution"></p>\n<p>From this picture alone we can already estimate that splitting the library could be benificial. We have roughly 1/3 SLOC spent on general, HTML and CSS functionality. The splitting could therefore result in three or four parts:</p>\n<ul>\n<li><em>AngleSharp.Core.Common</em>, containing the basic infrastructure and definitions [no dependency]</li>\n<li><em>AngleSharp.Core.Html</em>, containing the HTML parser and DOM implementation [depending on Common]</li>\n<li><em>AngleSharp.Core.Css</em>, containing the CSS parser and CSSOM implementation [depending on Common]</li>\n<li><em>AngleSharp.Core.Complete</em>, aggregating the Core and providing further helpers [depending on the former three]</li>\n</ul>\n<p>Experiments with a proper dissection will begin soon. Also the renderer part will then be discussed. Plans have already been made and it seems likely that a renderer will be published within this year (experimental stage). Here a new project, AngleSharp.Renderer will be opened. The renderer itself will contain many libraries, specifically to make the renderer common infrastructure a PCL again with specific platform libraries that contain the actual drawing code.</p>\n'),o={title:"AngleSharp v0.9 released",date:"2015-08-27 14:05:00",categories:"news release",author:"Florian Rappl",userId:"FlorianRappl",section:"Posts"};const l=function(){return r.createElement(a.ContentPage,null,r.createElement(a.PageLayout,{name:"blog",meta:o},r.createElement(a.PageContent,{meta:o},r.createElement(a.Markdown,{content:i,link:"https://github.com/AngleSharp/anglesharp.github.io/tree/main/docs/blog/2015-08-27-anglesharp-v09-released.md",editLabel:"Edit on GitHub"}))))}},3667:(e,n,t)=>{e.exports=t.p+"5ba40af84b557dfb645c3a294324c1ed.png"}}]);
//# sourceMappingURL=008a14.js.map